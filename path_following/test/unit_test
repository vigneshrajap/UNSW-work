#! /usr/bin/env python

import rostest

import unittest

import numpy as np

from path_following import PathFollowing

class TestPathFollowing(unittest.TestCase):

  def test_path_errors(self):

    path = list()
    path.append({'x': 0.0, 'y': 0.0})
    path.append({'x': 0.0, 'y': 1.0})
    pf = PathFollowing(path)

    linear_error, angular_error = pf.calculatePathErrors(1.0, 0.0, np.pi/2.0)
    self.assertAlmostEqual(linear_error, 1.0)
    self.assertAlmostEqual(angular_error, 0.0)

    linear_error, angular_error = pf.calculatePathErrors(1.0, 0.0, np.pi/4.0)
    self.assertAlmostEqual(linear_error, 1.0)
    self.assertAlmostEqual(angular_error, np.pi/4.0)

    linear_error, angular_error = pf.calculatePathErrors(1.0, 1.0, np.pi/4.0)
    self.assertAlmostEqual(linear_error, 1.0)
    self.assertAlmostEqual(angular_error, np.pi/4.0)

    linear_error, angular_error = pf.calculatePathErrors(-1.0, 1.0, np.pi/4.0)
    self.assertAlmostEqual(linear_error, -1.0)
    self.assertAlmostEqual(angular_error, np.pi/4.0)

if __name__ == '__main__':

  rostest.rosrun('test_path_following', 'test_path_following', TestPathFollowing)

